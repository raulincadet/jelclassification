library(tidyverse)
df_jel<-readxl::read_excel("C:\Users\Diaraye\Documents\Raul\GitHub\Covid19Survey\jel.xlsx")
df_jel<-readxl::read_excel("C:/Users/Diaraye/Documents/Raul/GitHub/Covid19Survey/jel.xlsx")
View(df_jel)
usethis::use_data_raw()
view(na.omit(df_jel))
usethis::use_data(na.omit(df_jel),overwrite = TRUE,internal = TRUE,name=df_jel)
usethis::use_data(na.omit(df_jel),overwrite = TRUE,internal = TRUE)
#usethis::use_data_raw() to add a folder data-raw to save script where data are prepared
#usethis::use_data(DATASET, overwrite = TRUE)
df_jel<-readxl::read_excel("C:/Users/Diaraye/Documents/Raul/GitHub/Covid19Survey/jel.xlsx")
usethis::use_data(na.omit(df_jel),overwrite = TRUE,internal = TRUE)
usethis::use_data(na.omit(df_jel),internal = TRUE)
library(jelclassification)
library(jelclassification)
usethis::use_data(na.omit(df_jel),overwrite = TRUE,internal = TRUE)
usethis::use_data(na.omit(df_jel),overwrite = TRUE,internal = TRUE)
library(jelclassification)
jelclassification::jel_keywords_count()
library(jelclassification)
jelclassification::jel_keywords_count()
library(jelclassification)
library(jelclassification)
jelclassification::find_jelcode("Monetary economics and to estimate a model")
######################
unlist("C,E,R")
######################
str_split("C,E,R")
######################
str_split("C,E,R",",")
######################
str_split("C,E,R",pattern=",")
######################
table(str_split("C,E,R",pattern=","))
######################
table(str_split("C,E,R,C,D,C,R",pattern=","))
jelclassification::count_jelcode("The environmental kuznets curve")
library(jelclassification)
jelclassification::count_jelcode("The environmental kuznets curve")
jelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
di<-jelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
max(di)
names(max(di))
library(jelclassification)
djelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
jelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
library(jelclassification)
jelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
jelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
library(jelclassification)
jelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
jelclassification::count_jelcode()
jelclassification::jel_keywords_count()
library(jelclassification)
jelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
jelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
library(jelclassification)
jelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
library(jelclassification)
library(jelclassification)
jelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model")
library(jelclassification)
jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model")
library(jelclassification)
jelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
library(jelclassification)
jelclassification::count_jelcode("The environmental kuznets curve: the VAR model")
jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model")
di<-jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model")
di
max(di$Ratio)
match(di$Ratio=max(di$Ratio))
match(di$Ratio==max(di$Ratio))
match(max(di$Ratio))
match(max(di$Ratio,di$Ratio))
match(max(di$Ratio,di))
match(max(di$Ratio,as.table(di)))
match(max(di$Ratio,di$Ratio))
match(max(di$Ratio),di$Ratio)
di
library(jelclassification)
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model")
library(jelclassification)
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model")
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model",method = "Freq")
jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model",method = "Freq")
jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model")
library(jelclassification)
jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model")
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model",method = "Freq")
di<-jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model")
di
di[,"Code"]
di[2,"Code"]
match(max(di[,"Ratio"]))
match(max(di[,"Ratio"]),di)
match(max(di[,"Ratio"]),di[,"Ratio"])
match(max(di[,"Ratio"]),di[,"Ratio"])
max(di[,"Ratio"])
match(max(di[,"Ratio"]))
match(max(di[,"Ratio"]), )
match(max(di[,"Ratio"]),table=di[,"Ratio"] )
match(max(di[,"Ratio"]),table=di$Raio )
match(max(d$Ratio),table=di$Raio )
t
match(max(d$Ratio),table=di$Ratio )
match(max(di$Ratio),table=di$Ratio )
match(max(di[,Ratio]),table=di[,Ratio] )
match(max(di[,"Ratio"]),table=di[,"Ratio"] )
match(max(di[,"Ratio"]),table=di[,"Ratio"] )
max(di[,"Ratio"])
di[,"Ratio"]
di$Ratio
match(max(di[,"Ratio"]),table=unlist(di[,"Ratio"]) )
library(jelclassification)
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model",method = "Freq")
jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model",method = "Freq")
jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model")
di[2,"Code"]
jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model")
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model",method = "Ratio")
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model",method = "Ratio")
library(jelclassification)
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model",method = "Ratio")
library(jelclassification)
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model",method = "Ratio")
jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model")
jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model")
library(jelclassification)
jelclassification::ratio_jelcode("The environmental kuznets curve: the VAR model")
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model",method = "Ratio")
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model",method = "Freq")
which(max(di[,"Ratio"]) %in% unlist(di[,"Ratio"]))
max(di[,"Ratio"])
(max(di[,"Ratio"]) %in% unlist(di[,"Ratio"]))
(max(di[,"Ratio"]) %in% (di[,"Ratio"]))
which(max(di[,"Ratio"]) %in% (di[,"Ratio"]))
(di[,"Ratio"])
which(max(di[,"Ratio"]) %in% (di[,"Ratio"]))
match(max(di[,"Ratio"]) %in% (di[,"Ratio"]))
match(max(di[,"Ratio"]),table= (di[,"Ratio"]))
match(max(di[,"Ratio"]),table= as.table(di[,"Ratio"]))
as.table(di[,"Ratio"])
match(max(di[,"Ratio"]),table= unlist(di[,"Ratio"]))
unlist(di[,"Ratio"])
match(max(di[,"Ratio"]) %in% unlist(di[,"Ratio"]))
(max(di[,"Ratio"]) %in% unlist(di[,"Ratio"]))
unlist(di[,"Ratio"])
(max(di[,"Ratio"]) %in% c(unlist(di[,"Ratio"])))
c(unlist(di[,"Ratio"]))
(max(di[,"Ratio"]) %in% list(unlist(di[,"Ratio"])))
which( list(unlist(di[,"Ratio"]))%in% max(di[,"Ratio"]))
which( (unlist(di[,"Ratio"]))%in% max(di[,"Ratio"]))
which( unlist(di[,"Ratio"])%in% max(di[,"Ratio"]))
which( unlist(di[,"Freq"])%in% max(di[,"Freq"]))
library(jelclassification)
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model",method = "Ratio")
jelclassification::dominant_jelcode("The environmental kuznets curve: the VAR model",method = "Freq")
text<-"I use the stochastic frontier methodology to estimate a cost and a profit frontier functions. The Fourier-flexible form is used in this paper because of its flexibility. Results show that, although foreign banks are more cost efficient than domestic banks, domestic banks are more profit efficient than foreign banks, in Haiti. The paper reveals also that, although treasury bills constitute an alternative source of profit for banks in Haiti, a growth of interest rate on treasury bills increases profit efficiency in current period whereas it decreases profit efficiency one period after this growth. The main implication of this paper is that foreign banks are not always more efficient than domestic banks in developing countries, and even in a country with low income level."
find_jel_code(text)
text<-"I use the stochastic frontier methodology to estimate a cost and a profit frontier functions. The Fourier-flexible form is used in this paper because of its flexibility. Results show that, although foreign banks are more cost efficient than domestic banks, domestic banks are more profit efficient than foreign banks, in Haiti. The paper reveals also that, although treasury bills constitute an alternative source of profit for banks in Haiti, a growth of interest rate on treasury bills increases profit efficiency in current period whereas it decreases profit efficiency one period after this growth. The main implication of this paper is that foreign banks are not always more efficient than domestic banks in developing countries, and even in a country with low income level."
find_jel_code(text)
jelclassification::find_jelcode(ttext)
jelclassification::find_jelcode(text)
jelclassification::dominant_jelcode(text)
library(jelclassification)
text<-"I use the stochastic frontier methodology to estimate a cost and a profit frontier functions. The Fourier-flexible form is used in this paper because of its flexibility. Results show that, although foreign banks are more cost efficient than domestic banks, domestic banks are more profit efficient than foreign banks, in Haiti. The paper reveals also that, although treasury bills constitute an alternative source of profit for banks in Haiti, a growth of interest rate on treasury bills increases profit efficiency in current period whereas it decreases profit efficiency one period after this growth. The main implication of this paper is that foreign banks are not always more efficient than domestic banks in developing countries, and even in a country with low income level."
find_jel_code(text)
text<-"I use the stochastic frontier methodology to estimate a cost and a profit frontier functions. The Fourier-flexible form is used in this paper because of its flexibility. Results show that, although foreign banks are more cost efficient than domestic banks, domestic banks are more profit efficient than foreign banks, in Haiti. The paper reveals also that, although treasury bills constitute an alternative source of profit for banks in Haiti, a growth of interest rate on treasury bills increases profit efficiency in current period whereas it decreases profit efficiency one period after this growth. The main implication of this paper is that foreign banks are not always more efficient than domestic banks in developing countries, and even in a country with low income level."
jelclassification::find_jel_code(text)
jelclassification::ratio_jelcode(text)
library(jelclassification)
library(jelclassification)
library(jelclassification)
jelclassification::jel_keywords_count()
library(jelclassification)
library(jelclassification)
jelclassification::ratio_jelcode(text)
jelclassification::ratio_jelcode("model to estimate bank profit")
jelclassification::ratio_jelcode("model to estimate banking profit")
jelclassification::ratio_jelcode("model to estimate bank profit")
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate bank profit")
df_jel<-readxl::read_excel("C:/Users/Diaraye/Documents/Raul/GitHub/Covid19Survey/jel.xlsx")
usethis::use_data(na.omit(df_jel),overwrite = TRUE,internal = TRUE)
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate bank profit")
jelclassification::ratio_jelcode("model to estimate banks profit")
jelclassification::ratio_jelcode("model to estimate banks profit and microfinance institution")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institution")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and rating agencies")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and ratings agencies")
df_jel<-readxl::read_excel("C:/Users/Diaraye/Documents/Raul/GitHub/Covid19Survey/jel.xlsx")
usethis::use_data(na.omit(df_jel),overwrite = TRUE,internal = TRUE)
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and ratings agencies")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and rating agencies")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and rating agency")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instrument")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
laod(df_jel)
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
ls()
ls"data-raw"
ls("data-raw")
ls("df")
ls("df_jel")
ls("df_jel.RData")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
jelclassification::df_jel
load(df_jel)
library(jelclassification)
load(df_jel)
load("df_jel","jelclassification")
load("jelclassification","df_jel")
load("data-raw/df_jel","jelclassification")
devtools::use_data(df_jel,overwrite = TRUE,internal = TRUE)
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
library(jelclassification)
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
load("df_jel.rdata")
local(load("df_jel.rda"))
load("df_jel.rda")
load("df_jel.rda")
load("df_jel*")
load("df_jel.*")
#usethis::use_data(df_jel,overwrite = TRUE,internal = TRUE)
save(df_jel,"data-raw/df_jel.RData")
df_jel<-readxl::read_excel("C:/Users/Diaraye/Documents/Raul/GitHub/Covid19Survey/jel.xlsx")
#usethis::use_data(df_jel,overwrite = TRUE,internal = TRUE)
save(df_jel,"data-raw/df_JEL.RData")
#usethis::use_data(df_jel,overwrite = TRUE,internal = TRUE)
save(df_jel,"data-raw/df_JEL.rda")
jelclassification::ratio_jelcode("model to estimate banks profit and financial institutions and financial instruments")
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
usethis::use_data(df_jel,overwrite = TRUE,internal = FALSE,name="df_JEL.rda")
df_jel<-readxl::read_excel("C:/Users/Diaraye/Documents/Raul/GitHub/Covid19Survey/jel.xlsx")
df_jel<-na.omit(df_jel)
usethis::use_data(df_jel,overwrite = TRUE,internal = FALSE,name="df_JEL.rda")
usethis::use_data(df_jel,overwrite = TRUE,internal = FALSE,name="df_jel.rda")
library(purrr)
library(usethis)
walk2(my.list, names(my.list), function(df_jel, df_JEL) {
assign(df_JEL,df_jel)
do.call("use_data", list(as.name(name), overwrite = TRUE))
})
walk2( function(df_jel, df_JEL) {
assign(df_JEL,df_jel)
do.call("use_data", list(as.name(name), overwrite = TRUE))
})
function(df_jel, df_JEL) {
assign(df_JEL,df_jel)
do.call("use_data", list(as.name(name), overwrite = TRUE))
}
##
function(df_jel, df_JEL) {
assign(df_JEL,df_jel)
do.call("use_data", list(as.name(name), overwrite = TRUE))
}
##
function(df_jel, df_JEL) {
assign(df_JEL,df_jel)
do.call("use_data", list(as.name(name), overwrite = TRUE))
}
##
function(df_jel, df_JEL) {
assign(df_JEL,df_jel)
do.call("use_data", list(as.name(name), overwrite = TRUE))
}
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
library(jelclassification)
jel_keywords_count()
library(jelclassification)
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
load()
data(package="jelclassification")
library(jelclassification)
load()
data(package="jelclassification")
jel_keywords_count()
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
data(package="jelclassification")
df_jel<-readxl::read_excel("C:/Users/Diaraye/Documents/Raul/GitHub/Covid19Survey/jel.xlsx")
df_jel<-na.omit(df_jel)
#usethis::use_data(df_jel,overwrite = TRUE)
#save(df_jel,file="df_JEL.RData")
#usethis::use_data(df_jel, internal = F)
save(df_jel, file = "df_JEL.rda")
load(ffile = "df_JEL.rda")
load(file = "df_JEL.rda")
ls()
#usethis::use_data(df_jel,overwrite = TRUE)
#save(df_jel,file="df_JEL.RData")
#usethis::use_data(df_jel, internal = F)
save(df_JEL, file = "df_jel.rda")
#usethis::use_data(df_jel,overwrite = TRUE)
#save(df_jel,file="df_JEL.RData")
#usethis::use_data(df_jel, internal = F)
save(df_jel, file = "df_JEL.rda")
load(file = "df_JEL.rda")
ls()
#usethis::use_data(df_jel,overwrite = TRUE)
#save(df_jel,file="df_JEL.RData")
#usethis::use_data(df_jel, internal = F)
save(df_jel, file = "df_JEL.rda");close(con)
ls()
library(jelclassification)
ls()
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
ratio_jelcode("Monetary policy for banks regulation")
library(jelclassification)
ratio_jelcode("Monetary policy for banks regulation")
library(jelclassification)
ratio_jelcode("Monetary policy for banks regulation")
library(jelclassification)
ratio_jelcode("Monetary policy for banks regulation")
count_jelcode("Monetary policy for banks regulation")
library(jelclassification)
count_jelcode("Monetary policy for banks regulation")
find_jelcode("Monetary policy for banks regulation")
dominant_jelcode("Monetary policy for banks regulation")
dominant_jelcode("Monetary policy for banks regulation",method = "Freq")
ratio_jelcode("Monetary policy for banks regulation",method = "Freq")
ratio_jelcode("Monetary policy for banks regulation")
library(jelclassification)
ratio_jelcode("Monetary policy for banks regulation")
dominant_jelcode("Monetary policy for banks regulation")
library(jelclassification)
df_jel<-readxl::read_excel("jel.xlsx")
df_jel<-readxl::read_excel("data-raw/jel.xlsx")
library(jelclassification)
ratio_jelcode("Monetary policy for banks regulation")
jelclassification::jel_keywords_count()
jelclassification::jel_keywords_count()
jelclassification::jel_keywords_count()
library(jelclassification)
load("~/Raul/GitHub/jelclassification/df_JEL.rda")
View(df_jel)
library(jelclassification)
jelclassification::jel_keywords_count()
library(jelclassification)
jel_keywords_count()
library(jelclassification)
jel_keywords_count()
